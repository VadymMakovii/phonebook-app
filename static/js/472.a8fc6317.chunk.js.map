{"version":3,"file":"static/js/472.a8fc6317.chunk.js","mappings":"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","sources":["Pages/LoginPage/LoginPage.jsx","components/AuthForm/AuthForm.styled.jsx","components/AuthForm/AuthForm.jsx","components/Button/Button.jsx","helpers/ErrorStatus.js","helpers/validationShemas.js","redux/Contacts/contactsSelectors.js"],"sourcesContent":["import { AuthForm } from 'components/AuthForm/AuthForm';\nimport { Box } from 'components/Box/Box';\n\nconst Login = () => {\n    return (\n      <Box width='100%' display=\"flex\" justifyContent='center' alignContent='center'>\n            <AuthForm/>\n      </Box>\n  );\n};\n\nexport default Login;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Field, Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  width: 400px;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[3]}px;\n  padding: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.text};\n  background-color: ${p => p.theme.colors.primary};\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: ${p => p.theme.shadows.main};\n  transition: ${p => p.theme.transitions.common};\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  width: calc(100% - 24px);\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  transition: ${p => p.theme.transitions.color};\n  &:focus-within {\n    color: ${p => p.theme.colors.textActive};\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  display: block;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  margin-top: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n  color: ${p => p.theme.colors.textActive};\n  background-color: ${p => p.theme.colors.secondary};\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.normal};\n  border-color: transparent;\n  outline: transparent;\n  transition: ${p => p.theme.transitions.all};\n  &:focus,\n  &:hover {\n    background-color: ${p => p.theme.colors.primary};\n    border-color: ${p => p.theme.colors.outline};\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  color: ${p => p.theme.colors.text};\n  transition: ${p => p.theme.transitions.color};\n  &:focus,\n  &:hover {\n    color: ${p => p.theme.colors.textActive};\n    text-decoration: none;\n  }\n`;\n\nexport const ShowPasswordBtn = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 0px;\n  margin: ${p => p.theme.space[0]}px;\n  padding: ${p => p.theme.space[0]}px;\n  transform: translateY(10%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent;\n  cursor: pointer;\n  border: ${p => p.theme.borders.none};\n  color: #b2bac2;\n  transition: ${p => p.theme.transitions.all};\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport toast from 'react-hot-toast';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport { selectIsLoading } from 'redux/Contacts/contactsSelectors';\nimport { Button } from 'components/Button/Button';\nimport { Box } from 'components/Box/Box';\nimport { register, login } from 'redux/Auth/authOperations';\nimport { ErrorStatus, loginValidationSchema, registerValidationSchema } from '../../helpers';\nimport {\n  Input,\n  Label,\n  StyledLink,\n  StyledForm,\n  ShowPasswordBtn,\n} from './AuthForm.styled';\n\n\nexport const AuthForm = () => {\n  const [isShowPassword, setIsShowPassword] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n\n  const handleSubmitForm = ({ name, email, password }, { resetForm }) => {\n    switch (pathname) {\n      case '/register':\n        dispatch(register({ name, email, password })).then((res) =>\n          res.error\n            ? toast.error(ErrorStatus[res.payload])\n            : resetForm()\n        );\n        break;\n      case '/login':\n        dispatch(login({ email, password })).then((res) =>\n          res.error\n            ? toast.error(ErrorStatus[res.payload])\n            : resetForm()\n        );\n        break;\n      default:\n        return;\n    }\n  };\n\n  const { btnTitle, path, text, title } = {\n    btnTitle: pathname === '/register' ? 'Sign in' : 'Log in',\n    path: pathname === '/register' ? '/login' : '/register',\n    text:\n      pathname === '/register'\n        ? 'Already have an account?'\n        : \"Don't have an account?\",\n    title: pathname === '/register' ? 'Log in' : 'Sign in',\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      onSubmit={handleSubmitForm}\n      validationSchema={pathname === '/register' ? registerValidationSchema : loginValidationSchema}\n      validateOnBlur\n    >\n      {({ errors, touched, isValid, dirty }) => (\n        <StyledForm>\n          {pathname === '/register' && (\n            <Label htmlFor=\"name\">\n              Name\n              <Input type=\"text\" name=\"name\" />\n              {errors.name && touched.name ? (\n                <Box fontSize=\"xs\" color=\"red\" mt={2}>\n                  {errors.name}\n                </Box>\n              ) : null}\n            </Label>\n          )}\n          <Label htmlFor=\"email\">\n            Email\n            <Input type=\"email\" name=\"email\" />\n            {errors.email && touched.email ? (\n              <Box fontSize=\"xs\" color=\"red\" mt={2}>\n                {errors.email}\n              </Box>\n            ) : null}\n          </Label>\n          <Label htmlFor=\"password\">\n            Password\n            <Input\n              type={isShowPassword ? 'text' : 'password'}\n              name=\"password\"\n            />\n            <ShowPasswordBtn\n              type=\"button\"\n              onClick={() => setIsShowPassword(!isShowPassword)}\n            >\n              {isShowPassword ? (\n                <FaEye size=\"24px\" />\n              ) : (\n                <FaEyeSlash size=\"24px\" />\n              )}\n            </ShowPasswordBtn>\n            {errors.password && touched.password ? (\n              <Box fontSize=\"xs\" color=\"red\" mt={2}>\n                {errors.password}\n              </Box>\n            ) : null}\n          </Label>\n          <Button\n            type=\"submit\"\n            name=\"button\"\n            disabled={isLoading || !isValid || !dirty}\n          >\n            {btnTitle}\n          </Button>\n          <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            flexDirection=\"row\"\n            gridGap=\"2\"\n          >\n            <Box as=\"p\" fontSize=\"s\" m={0} fontWeight=\"regular\" color=\"text\">\n              {text}\n            </Box>\n            <StyledLink to={path}>{title}</StyledLink>\n          </Box>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  align-self: center;\n  padding: ${p => p.theme.space[2]}px ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  border-radius: ${p => p.theme.radii.big};\n  background-color: ${p => p.theme.colors.primary};\n  border: ${p => p.theme.borders.normal};\n  color: ${p => p.theme.colors.text};\n  outline: transparent;\n  scale: 1;\n  cursor: pointer;\n  transition: ${p => p.theme.transitions.all};\n  &:focus:not(:disabled),\n  &:hover:not(:disabled) {\n    background-color: ${p => p.theme.colors.secondary};\n    border-color: ${p => p.theme.colors.outline};\n    color: ${p => p.theme.colors.textActive};\n    ${props =>\n      props.name === 'delete' &&\n      `background-color: #ff4848cd; color: #ffffff; border-color: #ff0000`};\n    ${props =>\n      props.name === 'cancel' &&\n      `background-color: #ff4848cd; color: #ffffff; border-color: #ff0000`};\n  }\n  &:disabled {\n    color: #b2bac2;\n    border-color: #b2bac2;\n    cursor: not-allowed;\n  }\n  &:active:not(:disabled) {\n    scale: 0.9;\n  }\n`;\n","export const ErrorStatus = {\n    400: \"BAD REQUEST\",\n    401: 'Wrong email or password. Try again!',\n    404: \"NOT FOUND\",\n    409: \"A user with this email address or name is already registered. Please log in or enter a different email address\",\n    500:  \"A connection error occurred. Please contact the support service\"\n}\n\n","import * as yup from 'yup';\n\nconst messages = {\n  name: 'The name must contain only letters, spaces and dashes',\n  phone:\n    'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n  email: 'Is not valid email. The email must be for example: email@example.com',\n  shortName:\n    \"So short?! It's okay, we won't tell anyone about this. But let's make the name a little longer\",\n  longName: 'Wow!!! Who are you warrior?!?! Max 30 symbols!',\n};\n\nconst regExp = {\n  name: /^([a-zA-Z-]\\s?)*$/,\n  phone: /^\\+?[0-9]{0,3}?\\s?\\(?[0-9]{0,3}?\\)?[0-9\\s?\\-?]*$/,\n  email: /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n};\n\nexport const registerValidationSchema = yup.object().shape({\n  email: yup.string().required('Required').email(messages.email, regExp.email),\n  password: yup\n    .string()\n    .required('Required')\n    .min(6, 'Too Short! Min 6 symbols!')\n    .max(10, 'Too Long! Max 10 symbols!'),\n  name: yup\n    .string()\n    .required('Required')\n    .min(2, messages.shortName)\n    .max(30, messages.longName),\n});\n\nexport const loginValidationSchema = yup.object().shape({\n  email: yup.string().required('Required').email(messages.email, regExp.email),\n  password: yup\n    .string()\n    .required('Required')\n    .min(6, 'Too Short! Min 6 symbols!')\n    .max(10, 'Too Long! Max 10 symbols!'),\n});\n\nexport const contactValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .required('Required')\n    .min(2, 'Too Short! Min 2 symbols!')\n    .max(30, 'Too Long! Max 30 symbols!')\n    .matches(regExp.name, messages.name),\n  phone: yup\n    .string()\n    .required('Required')\n    .min(10, 'Too Short! Min 10 symbols!')\n    .max(20, 'Too Long! Max 20 symbols!')\n    .matches(regExp.phone, messages.phone),\n});\n","export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFiltredContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n"],"names":["width","display","justifyContent","alignContent","StyledForm","styled","Form","p","theme","space","colors","text","primary","borders","normal","radii","shadows","main","transitions","common","Label","fontSizes","m","fontWeights","medium","color","textActive","Input","Field","secondary","all","outline","StyledLink","Link","s","ShowPasswordBtn","none","AuthForm","useState","isShowPassword","setIsShowPassword","isLoading","useSelector","selectIsLoading","dispatch","useDispatch","pathname","useLocation","btnTitle","path","title","initialValues","name","email","password","onSubmit","resetForm","register","then","res","error","toast","ErrorStatus","payload","login","validationSchema","registerValidationSchema","loginValidationSchema","validateOnBlur","errors","touched","isValid","dirty","htmlFor","type","Box","fontSize","mt","onClick","size","Button","disabled","alignItems","flexDirection","gridGap","as","fontWeight","to","big","props","messages","regExp","yup","shape","required","min","max","contactValidationSchema","matches","phone","selectContacts","state","contacts","items","selectFilter","filter","selectFiltredContacts","normalizedFilter","toLowerCase","contact","includes"],"sourceRoot":""}